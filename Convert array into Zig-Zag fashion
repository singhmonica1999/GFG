//{ Driver Code Starts
//Given an array arr of distinct elements of size n, the task is to rearrange the elements of the array in a zig-zag fashion so that the converted array should be in the below form: 

// arr[0] < arr[1]  > arr[2] < arr[3] > arr[4] < . . . . arr[n-2] < arr[n-1] > arr[n]. 

// Note: Modify the given arr[] only, If your transformation is correct, the output will be 1 else the output will be 0. 

// Examples

// Input: n = 7, arr[] = {4, 3, 7, 8, 6, 2, 1}
// Output: 1
// Explanation:  After modification the array will look like 3 < 7 > 4 < 8 > 2 < 6 > 1, the checker in the driver code will produce 1.
import java.io.*;
import java.util.*;

class IntArray {
    public static int[] input(BufferedReader br, int n) throws IOException {
        String[] s = br.readLine().trim().split(" ");
        int[] a = new int[n];
        for (int i = 0; i < n; i++) a[i] = Integer.parseInt(s[i]);

        return a;
    }

    public static void print(int[] a) {
        for (int e : a) System.out.print(e + " ");
        System.out.println();
    }

    public static void print(ArrayList<Integer> a) {
        for (int e : a) System.out.print(e + " ");
        System.out.println();
    }
}

class GFG {

    public static boolean isZigzag(int n, int[] arr) {
        int f = 1;

        for (int i = 1; i < n; i++) {
            if (f == 1) {
                if (arr[i - 1] > arr[i]) return false;
            } else {
                if (arr[i - 1] < arr[i]) return false;
            }
            f ^= 1;
        }

        return true;
    }

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t;
        t = Integer.parseInt(br.readLine());
        while (t-- > 0) {

            int n;
            n = Integer.parseInt(br.readLine());

            int[] arr = IntArray.input(br, n);

            Solution obj = new Solution();
            obj.zigZag(n, arr);
            boolean flag = false;
            for (int i = 0; i < n; i++) {
                if (arr[i] == i % 2) {
                    flag = false;
                } else {
                    flag = true;
                    break;
                }
            }
            if (!flag) {
                System.out.println("0");
            } else {

                boolean check = isZigzag(n, arr);
                if (check) {
                    System.out.println("1");
                } else {
                    System.out.println("0");
                }
            }
        
System.out.println("~");
}
    }
}

// } Driver Code Ends



class Solution {
    public static void zigZag(int n, int[] arr) {
        // code here
        //1,2,3,4,6,7,8
        //1
       //1,3,2,4,6,7,8
       //1<3>2<4>6,7,8
   boolean flag=true;
        for(int i=0;i<=n-2;i++){
            if(flag){
           if( arr[i]>arr[i+1])
           {int temp=arr[i];
               arr[i]=arr[i+1];
           arr[i+1]=temp;
               
           }}
           else{
               if(arr[i]<arr[i+1]){
               int temp=arr[i];
               arr[i]=arr[i+1];
           arr[i+1]=temp;}
               
           }
           flag=!flag;
            
        }
        
    
  
}}